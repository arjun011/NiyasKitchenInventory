name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main, feature, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: NiyasKitchenInventory.xcodeproj
  SCHEME: NiyasKitchenInventory
  CONFIGURATION: Debug
  # Use an iOS version that exists on GitHub macOS images
  DESTINATION: platform=iOS Simulator,OS=17.5,name=iPhone 14
  DEVELOPER_DIR: /Applications/Xcode_16.1.app

jobs:
  build:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1 & show versions
        run: |
          sudo xcode-select -s "$DEVELOPER_DIR"
          xcodebuild -version
          xcrun simctl list runtimes | grep iOS || true
          xcrun simctl list devices | head -n 20

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: spm-${{ runner.os }}-

      - name: Resolve SPM dependencies
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT"

      - name: Build (no code signing)
        run: |
          set -euo pipefail
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            CODE_SIGNING_ALLOWED=NO \
            -resultBundlePath build/CI.xcresult \
            clean build \
          | xcpretty && exit ${PIPESTATUS[0]}

      # --- Uncomment this block when you add tests ---
      # - name: Test
      #   run: |
      #     set -euo pipefail
      #     xcodebuild \
      #       -project "$PROJECT" \
      #       -scheme "$SCHEME" \
      #       -configuration "$CONFIGURATION" \
      #       -sdk iphonesimulator \
      #       -destination "$DESTINATION" \
      #       CODE_SIGNING_ALLOWED=NO \
      #       -enableCodeCoverage YES \
      #       -resultBundlePath build/CI.xcresult \
      #       test \
      #     | xcpretty && exit ${PIPESTATUS[0]}

      - name: Upload xcresult
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: CI.xcresult
          path: build/CI.xcresult
          if-no-files-found: warn

      - name: Upload raw build log
        if: always()
        run: |
          mkdir -p build/logs
          echo "See CI.xcresult for full details." > build/logs/README.txt
        shell: bash
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs
          path: build/logs
          if-no-files-found: warn
