name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main, feature, develop ]

env:
  PROJECT: NiyasKitchenInventory.xcodeproj        # If you use a workspace, set WORKSPACE and remove PROJECT
  SCHEME: NiyasKitchenInventory
  CONFIGURATION: Debug
  DESTINATION: platform=iOS Simulator,name=iPhone 16 Pro
  XCODE_APP: /Applications/Xcode_16.1.app

jobs:
  build:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode
        run: |
          sudo xcode-select -s "$XCODE_APP"
          xcodebuild -version
          xcrun simctl list runtimes | grep "iOS " || true
          xcrun simctl list devices | head -n 25

      # üîé Sanity checks (these often reveal exit 66 root causes)
      - name: List Xcode projects & workspaces at repo root
        run: ls -la

      - name: Show schemes (must include your scheme and be Shared)
        run: |
          if [ -f "$PROJECT" ]; then
            xcodebuild -list -project "$PROJECT"
          elif [ -f "$WORKSPACE" ]; then
            xcodebuild -list -workspace "$WORKSPACE"
          else
            echo "‚ùå Neither PROJECT nor WORKSPACE file found at repo root"; exit 66
          fi

      - name: Show valid destinations for the scheme
        run: |
          if [ -f "$PROJECT" ]; then
            xcodebuild -project "$PROJECT" -scheme "$SCHEME" -showdestinations
          else
            xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -showdestinations
          fi

      # üß± Build with explicit output locations so we can always upload artifacts
      - name: Build (no signing)
        id: build
        run: |
          set -euo pipefail
          mkdir -p build
          if [ -f "$PROJECT" ]; then
            xcodebuild \
              -project "$PROJECT" \
              -scheme "$SCHEME" \
              -configuration "$CONFIGURATION" \
              -sdk iphonesimulator \
              -destination "$DESTINATION" \
              -derivedDataPath build/DerivedData \
              -resultBundlePath build/BuildResult.xcresult \
              CODE_SIGNING_ALLOWED=NO \
              clean build \
            | tee build/xcodebuild.log
          else
            xcodebuild \
              -workspace "$WORKSPACE" \
              -scheme "$SCHEME" \
              -configuration "$CONFIGURATION" \
              -sdk iphonesimulator \
              -destination "$DESTINATION" \
              -derivedDataPath build/DerivedData \
              -resultBundlePath build/BuildResult.xcresult \
              CODE_SIGNING_ALLOWED=NO \
              clean build \
            | tee build/xcodebuild.log
          fi

      # üì¶ Always upload logs/results so you can inspect failures
      - name: Upload result bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: BuildResult.xcresult
          path: build/BuildResult.xcresult

      - name: Upload raw xcodebuild log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild.log
          path: build/xcodebuild.log
