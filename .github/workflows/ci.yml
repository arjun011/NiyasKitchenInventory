name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main, feature, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: NiyasKitchenInventory.xcodeproj
  SCHEME: NiyasKitchenInventory
  CONFIGURATION: Debug
  DESTINATION: "platform=iOS Simulator,OS=17.4,name=iPhone 15"   # ← quoted
  DEVELOPER_DIR: "/Applications/Xcode_16.1.app"                  # ← quoted

jobs:
  build-test:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1 & show versions
        run: |
          sudo xcode-select -s "$DEVELOPER_DIR"
          xcodebuild -version
          xcrun simctl list runtimes | grep "iOS 17.4" || true
          xcrun simctl list devices | grep "iPhone 15" || true

      - name: List repo files & schemes
        run: |
          pwd && ls -la
          echo "::group::xcodebuild -list"
          xcodebuild -list -project "$PROJECT" || true
          echo "::endgroup::"

      - name: Show valid destinations for scheme
        run: |
          xcodebuild -project "$PROJECT" -scheme "$SCHEME" -showdestinations || true

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: spm-${{ runner.os }}-

      - name: Resolve SPM Dependencies
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT"

      # Build only (no tests yet) and ALWAYS emit artifacts
      - name: Build
        id: build
        shell: bash
        run: |
          set -o pipefail
          mkdir -p build
          XCRESULT="$PWD/build/BuildResult.xcresult"
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            CODE_SIGNING_ALLOWED=NO \
            -derivedDataPath "$PWD/build/DerivedData" \
            -resultBundlePath "$XCRESULT" \
            clean build | tee "$PWD/build/xcodebuild.log"
          STATUS=${PIPESTATUS[0]}
          echo "build_log_path=$PWD/build/xcodebuild.log" >> "$GITHUB_OUTPUT"
          if [ -d "$XCRESULT" ]; then
            echo "xcresult_path=$XCRESULT" >> "$GITHUB_OUTPUT"
          fi
          exit $STATUS

      - name: Upload artifacts (logs & xcresult)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ${{ steps.build.outputs.build_log_path }}
            ${{ steps.build.outputs.xcresult_path }}
            build/DerivedData/Logs/Build/*.xcactivitylog
          if-no-files-found: warn
