name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main, feature, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: NiyasKitchenInventory.xcodeproj
  SCHEME: NiyasKitchenInventory
  CONFIGURATION: Debug
  DESTINATION: platform=iOS Simulator,OS=17.4,name=iPhone 15
  DEVELOPER_DIR: /Applications/Xcode_16.1.app

jobs:
  build-test:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1 & show versions
        run: |
          sudo xcode-select -s "$DEVELOPER_DIR"
          xcodebuild -version
          xcrun simctl list runtimes | grep iOS || true
          xcrun simctl list devices | head -n 20

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: spm-${{ runner.os }}-

      - name: Resolve SPM Dependencies
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT"

      - name: Build & Test
        id: xcode-test
        run: |
          set -euo pipefail
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            -enableCodeCoverage YES \
            clean build \
          | xcpretty && exit ${PIPESTATUS[0]}

      - name: Locate latest .xcresult
        if: always()
        id: find-xcresult
        run: |
          set -euo pipefail
          RESULT=$(ls -dt ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult 2>/dev/null | head -n 1 || true)
          echo "result_path=${RESULT}" >> $GITHUB_OUTPUT

      - name: Upload TestResult.xcresult
        if: always() && steps.find-xcresult.outputs.result_path != ''
        uses: actions/upload-artifact@v4
        with:
          name: TestResult.xcresult
          path: ${{ steps.find-xcresult.outputs.result_path }}
          if-no-files-found: ignore

      - name: Helpful failure message
        if: failure()
        run: |
          echo "xcodebuild failed. Download TestResult.xcresult artifact and open it in Xcode for details."
          exit 1
