name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main, feature, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: NiyasKitchenInventory.xcodeproj
  SCHEME: NiyasKitchenInventory
  CONFIGURATION: Debug
  DESTINATION: "platform=iOS Simulator,name=iPhone 15"  # no OS pin; build-only
  DEVELOPER_DIR: "/Applications/Xcode_16.1.app"

jobs:
  build-test:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1 & show versions
        run: |
          sudo xcode-select -s "$DEVELOPER_DIR"
          xcodebuild -version
          xcrun simctl list runtimes | grep iOS || true
          xcrun simctl list devices | head -n 20

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: spm-${{ runner.os }}-

      - name: Resolve SPM Dependencies
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT"

      - name: Build (write logs/artifacts to ./build/)
        id: build
        shell: bash
        run: |
          set -o pipefail
          mkdir -p build
          DERIVED=build/DerivedData
          XCRESULT=build/BuildResult.xcresult
          LOG=build/xcodebuild.log

          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            -derivedDataPath "$DERIVED" \
            -resultBundlePath "$XCRESULT" \
            CODE_SIGNING_ALLOWED=NO \
            clean build | tee "$LOG"
          status=${PIPESTATUS[0]}

          echo "log_path=$LOG" >> "$GITHUB_OUTPUT"
          echo "xcresult_path=$XCRESULT" >> "$GITHUB_OUTPUT"
          echo "derived_logs_glob=$DERIVED/Logs/Build/*.xcactivitylog" >> "$GITHUB_OUTPUT"

          exit $status

      - name: Tail last 200 lines on failure
        if: failure()
        run: |
          echo "---- LAST 200 LINES OF xcodebuild LOG ----"
          tail -n 200 "${{ steps.build.outputs.log_path }}" || true

      - name: Upload artifacts (log, xcresult, xcactivitylog)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ${{ steps.build.outputs.log_path }}
            ${{ steps.build.outputs.xcresult_path }}
            ${{ steps.build.outputs.derived_logs_glob }}
          if-no-files-found: warn
