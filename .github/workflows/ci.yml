name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: NiyasKitchenInventory.xcodeproj
  SCHEME: NiyasKitchenInventory
  TEST_PLAN_NAME: NiyasKitchenInventory
  CONFIGURATION: Debug
  DESTINATION: "platform=iOS Simulator,OS=latest,name=iPhone 15 Pro"
  DEVELOPER_DIR: "/Applications/Xcode_16.1.app"

jobs:
  build-test:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1 & show versions
        run: |
          sudo xcode-select -s "$DEVELOPER_DIR"
          xcodebuild -version

      - name: Show simulators
        run: |
          xcrun simctl list runtimes
          xcrun simctl list devices

      - name: Sanity: list schemes & test plans
        run: |
          echo "== Repo tree =="
          ls -la
          echo "== Xcode schemes =="
          xcodebuild -list -project "$PROJECT" || true
          echo "== Test plan files =="
          find . -name "*.xctestplan" -maxdepth 3 -print || true

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            spm-${{ runner.os }}-

      - name: Resolve SPM Dependencies
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT"

      - name: Build & Test
        id: xcode-test
        run: |
          set -euo pipefail
          rm -f xcodebuild.log || true
          rm -rf build || true
          mkdir -p build

          set +e
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -testPlan "$TEST_PLAN_NAME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            -enableCodeCoverage YES \
            -resultBundlePath build/CI.xcresult \
            clean test | tee xcodebuild.log
          XCB_EXIT=${PIPESTATUS[0]}
          set -e

          echo "XCODEBUILD_EXIT=${XCB_EXIT}" >> "$GITHUB_OUTPUT"
          echo "---- Tail of xcodebuild.log ----"
          tail -n 300 xcodebuild.log || true
          echo "--------------------------------"

      - name: Upload raw xcodebuild log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild.log
          path: xcodebuild.log
          if-no-files-found: warn

      - name: Upload CI.xcresult (if produced)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResult.xcresult
          path: build/CI.xcresult
          if-no-files-found: warn

      - name: Fail job if xcodebuild failed
        if: steps.xcode-test.outputs.XCODEBUILD_EXIT != '0'
        run: |
          echo "xcodebuild failed. Download artifacts xcodebuild.log and TestResult.xcresult."
          exit 1
