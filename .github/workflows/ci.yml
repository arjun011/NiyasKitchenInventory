name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main, feature/** ]
  pull_request:

jobs:
  build-test:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Show which Xcodes are installed on the runner
      - name: List installed Xcodes
        run: ls -1 /Applications | grep -E '^Xcode(_[0-9]+\.[0-9]+)?\.app$' || true

      # Select the newest available Xcode (16.1 preferred, else 16.0, else default)
      - name: Select Xcode
        run: |
          if [ -d "/Applications/Xcode_16.1.app" ]; then
            sudo xcode-select -s "/Applications/Xcode_16.1.app"
          elif [ -d "/Applications/Xcode_16.0.app" ]; then
            sudo xcode-select -s "/Applications/Xcode_16.0.app"
          else
            # Fallback to the default Xcode on the image
            sudo xcode-select -s "/Applications/Xcode.app"
          fi

      - name: Verify Xcode version
        run: xcodebuild -version

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: ${{ runner.os }}-spm-

      - name: Resolve Swift Packages
        run: xcodebuild -resolvePackageDependencies

      - name: Build
        run: >
          xcodebuild -scheme "NiyasKitchenInventory"
          -sdk iphonesimulator
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro'
          -configuration Debug
          build

      - name: Test
        run: >
          xcodebuild -scheme "NiyasKitchenInventory"
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro'
          -configuration Debug
          test
