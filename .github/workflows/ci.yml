name: CI

on:
  push:
    branches: [ main, feature, develop ]
  pull_request:
    branches: [ main, feature, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: NiyasKitchenInventory.xcodeproj
  SCHEME: NiyasKitchenInventory
  CONFIGURATION: Debug
  DESTINATION: platform=iOS Simulator,OS=17.4,name=iPhone 15
  DEVELOPER_DIR: /Applications/Xcode_16.1.app

jobs:
  build-test:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.1 & show versions
        run: |
          sudo xcode-select -s "$DEVELOPER_DIR"
          xcodebuild -version
          xcrun simctl list runtimes | grep "iOS 17.4" || true
          xcrun simctl list devices | grep "iPhone 15" || true

      - name: List repo files (sanity)
        run: |
          pwd
          ls -la
          echo "::notice title=Looking for project::"
          find . -maxdepth 2 -name "*.xcodeproj" -print

      - name: List schemes / targets (critical)
        run: |
          echo "::group::xcodebuild -list"
          xcodebuild -list -project "$PROJECT" || true
          echo "::endgroup::"

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
            ~/Library/Caches/org.swift.swiftpm
          key: spm-${{ runner.os }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: spm-${{ runner.os }}-

      - name: Resolve SPM Dependencies
        run: xcodebuild -resolvePackageDependencies -project "$PROJECT"

      # ðŸ”§ Build only (no tests yet). Also disable signing for CI.
      - name: Build
        id: build
        run: |
          set -euo pipefail
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            CODE_SIGNING_ALLOWED=NO \
            clean build \
            -resultBundlePath BuildResult.xcresult \
          | tee build.log
          echo "build_log_path=$GITHUB_WORKSPACE/build.log" >> $GITHUB_OUTPUT
          echo "xcresult_path=$GITHUB_WORKSPACE/BuildResult.xcresult" >> $GITHUB_OUTPUT

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            ${{ steps.build.outputs.build_log_path }}
            ${{ steps.build.outputs.xcresult_path }}
          if-no-files-found: warn
